#EXPORTS {{{
# find alternative apps if it is installed on your system
find_alt() { for i;do which "$i" >/dev/null && { echo "$i"; return 0;};done;return 1; }
# set the default program, 1st detected in array is chosen as default
export TERMINAL=$(find_alt urxvt)
export OPENER=$(find_alt xdg-open exo-open gnome-open)
export BROWSER=$(find_alt qutebrowser firefox chromium chromium-browser google-chrome $OPENER )
export BROWSERCLI=$(find_alt w3m links2 links lynx elinks $OPENER )
export COMICER=$(find_alt mcomix comix zathura $OPENER )
export EBOOKER=$(find_alt ebook-viewer $OPENER )
export EDITOR=$(find_alt vim nano emac leafpad gedit pluma $OPENER )
export FILEMANAGER=$(find_alt qtfm pcmanfm thunar nautilus dolphin spacefm enlightenment_filemanager $OPENER )
export PAGER=$(find_alt less more most)
export PLAYER=$(find_alt mpv vlc mplayer cvlc $OPENER )
# export MUSICER=$(find_alt mplayer mpg123 mpv cvlc $OPENER )
# export WORDPROCESSOR=$(find_alt wordgrinder $OPENER )
# export READER=$(find_alt mupdf zathura evince $OPENER )
# export ROOTER=$(find_alt gksudo kdesudo )
# export IMAGEVIEWER=$(find_alt ristretto feh display eog $OPENER )
# }}}
# CONFIGURATIONS {{{
rcvim() { $EDITOR ~/.vimrc ;}
rczsh() { $EDITOR ~/.zshrc ;}
rcaliases() { $EDITOR ~/.aliases ;}
rctmux() { $EDITOR ~/.tmux.conf ;}
rctor() { $EDITOR ~/.torrc ;}
rcurlview() { $EDITOR ~/.urlview ;}
rcxresources() { $EDITOR ~/.Xresources ;}
rci3wm() { $EDITOR ~/.config/i3/config ;}
rci3status() { $EDITOR ~/.config/i3status/config ;}
rckeynav() { $EDITOR ~/.config/keynav/keynavrc ;}
rcmpv() { $EDITOR ~/.config/mpv ;}
rczathura() { $EDITOR ~/.config/zathura/zathurarc ;}
rcncmpcpp() { $EDITOR ~/.config/ncmpcpp ;}
rcpianobar() { $EDITOR ~/.config/pianobar/config ;}
rcqutebrowser() { $EDITOR ~/.config/qutebrowser/config.py ;}
rcranger() { $EDITOR ~/.config/ranger ;}
rchosts() { sudo $EDITOR /etc/hosts ;}
rcfstab() { sudo $EDITOR /etc/fstab ;}
rcgrub() { sudo $EDITOR /etc/default/grub ;}
rcpacman() {sudo $EDITOR /etc/pacman.conf ;}
rcpacman-mirrorlist() {sudo $EDITOR /etc/pacman.d/mirrorlist ;}
# RELOAD - SOURCE
so-zsh() { source ~/.zshrc ;}
so-font() { fc-cache -v -f ;}
so-grub() { sudo grub-mkconfig -o /boot/grub/grub.cfg ;}
so-keynav() { killall keynav ; keynav daemonize ;}
so-locatedb() { sudo updatedb ;}
so-xresources() { xrdb -load ~/.Xresources ;}
# }}}
# GENERAL ALIASES {{{
alias sudo='sudo '          # passing aliases archwiki
# SHORTCUTS
alias vim='nvim'
alias q='exit'
alias zrc='vim ~/.zshrc'
alias arc='vim ~/.aliases'
alias brc='vim ~/.bashrc'
alias vrc='vim ~/.vimrc'
alias irc='vim ~/.config/i3/config'
alias xrc='xrdb ~/.Xresources'
alias so='source'
alias sz='source ~/.zshrc'
alias ctl='sudo systemctl'
alias uctl='systemctl --user'
alias lyrics='. ~/.config/pianobar/lyrics.sh'
alias polipo='polipo -c ~/.polipo'
alias ydlmp3='youtube-dl -i --extract-audio --audio-format mp3'
alias ydl='youtube-dl'
alias killentr='kill -9 $(ps -o ppid= $(pgrep entr))'
alias xev-keycode="xev | grep 'keycode\|button'"
alias mime='xdg-mime'
alias mountls='mount | column -t'
alias zm='cd /media'
alias zl='cd /dev/disk/by-label/'
# CHANGE INNER BEHAVIOUR
alias bc='bc -q -l'     # quiet
alias df='df -Th --total'   #human
alias du='du -hs'
alias free='free -h'
alias ln='ln -iv'
alias mkdir='mkdir -p -v'
mkcd() {mkdir "$@" && cd "$@" ;}
alias rm='rm -v'
alias wget='wget -N -c'
alias youtube-viewer='youtube-viewer -C -f -4 --results=6'  # color|fullscreen|480p
if [ -x /usr/bin/dircolors ] ; then
    alias ls='ls --color=auto -h'
    alias ll='ls -la'
    alias lg='ll | grep -i'
    alias dir='dir --color-auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi
# Tmux
alias tt='tmuxinator'
alias tnew='tmux new-session'
alias ta='tmux attach -t'
alias ts='tmux new-session -s'
alias tl='tmux list-sessions'
alias tkillsesion='tmux kill-session -t'
alias tkillall='tmux kill-server'
# pip
alias pipi='pip install '
alias pipiu='pip install --user '
alias pipu='pip uninstall '
alias pipg='pip list | grep'
alias pipf='pip freeze'
alias pips='pip search '
#fzf
alias fzv='vim $(fzf-tmux -m -x)'
# git
alias gs='git status '
alias ga='git add '
# alias gb='git branch '
alias gca='git commit -a'
alias gcm='git commit -m'
alias gco='git checkout '
alias gl='git log --oneline --graph --decorate --all'
# brew
alias starwars="telnet towel.blinkenlights.nl" #starwars ascii
# }}}
# GLOBAL ALIASES {{{
alias -g ehco='echo'
alias -g isntall='install'
alias -g wrokon='workon'
alias gti='git'
## pipe aliases
alias -g L='| less'
alias -g H='| head'
alias -g T='| tail'
alias -g G='| grep -i'
alias -g pl='| less'
alias -g pg='| grep'
# GIST
alias -g pasteit='nc termbin.com 9999'
alias -g gist='2>&1 | pasteit | pbcopy && pbpaste;'
alias pbgist='pbpaste | gist'
pbcopy() { xclip -selection clipboard ;}
pbpaste() { xclip -selection clipboard -o ;}
pbselect() { xclip -selection primary -o ;}
alias pbnoformatting='xclip -selection clipboard -o | xclip -selection clipboard'
#}}}
# GENERAL FUNCTIONS --------------------------------------------------------------- {{{
fzdo() { "$@" $(fzf-tmux -m -x) ;}
fzopen() { "$@" "$(fzf-tmux -m -x)" ;}
mpd-kill() { kill -9 $(cat ~/.mpd/mpd.pid) ;}
mpd-restart() { kill -9 $(cat ~/.mpd/mpd.pid) && mpd ;}
check-word() { echo "$1" | aspell -a ;}
check-list() { cat "$1" | aspell list ;}
check-file() { aspell check "$1" ;}
zombie-process() { ps aux | awk '{ print $8 " " $2 }' | grep -w Z ;}
peerflix(){ command peerflix "$@" --mpv --path ~/Downloads ;}
zsh_fix(){ rm ~/.zcompdump*; exec zsh ;}
# Translate Shell
define() { trans "$@" | less ;}
deflang() { trans -identify "$@" ;}
defpten() { trans -p pt:en "$@" ;}
defenpt() { trans -p en:pt "$@" ;}
defsay() { trans -speak "$*" ;}  # say in whatever language it is
info() {   # get current host related info
    echo -e "\n${RED}Kernel Information:$NC " ; uname -a
    echo -e "\n${RED}Users logged on:$NC " ; w -h
    echo -e "\n${RED}Current date :$NC " ; date
    echo -e "\n${RED}Machine stats :$NC " ; uptime
    echo -e "\n${RED}Memory stats :$NC " ; free
    echo -e "\n${RED}Disk Usage :$NC " ; df -Th
}
man() {
  env LESS_TERMCAP_mb=$'\E[01;31m' \
  LESS_TERMCAP_md=$'\E[01;31m' \
  LESS_TERMCAP_me=$'\E[0m' \
  LESS_TERMCAP_se=$'\E[0m' \
  LESS_TERMCAP_so=$'\E[01;44;33m' \
  LESS_TERMCAP_ue=$'\E[0m' \
  LESS_TERMCAP_us=$'\E[01;32m' \
  man "$@"
}
colours() {
    for i in {0..255}; do
        printf "\x1b[38;5;${i}m colour${i}"
        if (( $i % 5 == 0 )); then
            printf "\n"
        else
            printf "\t"
        fi
    done
}
cdls() {  # cd then ls
    if [ -d "$1" ]; then
        cd "$1"
        ls
    else
        echo "bash: cl: '$1': Directory not found"
    fi
}
lsf() { ls -1p "$@" | grep -v '\/$' ;}  # ls files only
lsg() {  # ls | grep
    keyword=$(echo "$@" |  sed 's/ /.*/g')
    ls -hlA --color=yes \
    | awk '{k=0;for(i=0;i<=8;i++)k+=((substr($1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(" %0o ",k);print}' \
    | grep -iE $keyword
}
lst() {  # ls order by time, most recent
    ls -vAFqh --color=yes -got --time-style=long-iso "$@" \
    | sed "s/$(date +%Y-%m-%d)/\x1b[32m     TODAY\x1b[m/;s/$(date +'%Y-%m-%d' -d yesterday)/\x1b[33m YESTERDAY\x1b[m/" \
    | awk '{k=0;for(i=0;i<=8;i++)k+=((substr($1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(" %0o ",k);print}' | tac
}
calc() {
    if which python2 &>/dev/null; then
        python2 -ic "from __future__ import division; from math import *; from random import *"
    elif which python3 &>/dev/null; then
        python3 -ic "from math import *; import cmath"
    elif which bc &>/dev/null; then
        bc -q -l
    else
        echo "Requires python2, python3 or bc for calculator features"
    fi
}
pytags(){
    ctags -R --fields=+l --languages=python --python-kinds=-iv -f ./pytags $(python -c "import os, sys; print(' '.join('{}'.format(d) for d in sys.path if os.path.isdir(d)))")
}
p2k(){
    #command k2pdfopt $1 -w 600 -h 800 -dpi 167 -idpi -2 -wrap -hy -ws 0.375 -x
    command k2pdfopt $1 -mode fw -m 0.25 -x
}
arconai(){
    if [[ $OS == 'Darwin' ]]; then
        workon streamlink;arconai.py "$@"
    elif [[ $OS == 'Linux' ]]; then
        arconai.py "$@"
    fi
}
# }}}
# LINUX-ONLY - Functions {{{
if [[ $OS == 'Linux' ]]; then
    # FUNCTIONS
    open() { xdg-open "$@" > /dev/null 2>&1 ;}  
    update-grub() { sudo grub-mkconfig -o /boot/grub/grub.cfg ;}
    grub-update() { sudo grub-mkconfig -o /boot/grub/grub.cfg ;}
    mime_type(){
        file_type=$(xdg-mime query filetype "$1")
        application=$(xdg-mime query default "$file_type")
        echo "$application is the default for $file_type"
        if [[ -n $2 ]]; then
            find /usr/share -name "*$2*.desktop"
        fi
    }
    # PACKAGE MANAGER
    find_pckmngr(){
        for i; do
            which "$i" > /dev/null && {echo "$i"; return 0;};
        done;
        return 1;
    }
    export PKMGR=$(find_pckmngr pacman aptitude apt-get yum zypper emerge)
    if [[ "$PKMGR" == "pacman" ]]; then
        pacsearch(){ pacman -Ss "$@";}
        pacinstall(){ sudo pacman -S "$@" ;}
        pacremove(){ sudo pacman -Rscn "$@" ;}
        pacremoveorphans() { sudo pacman -Rs $(pacman -Qqtd) ;}
        paccleanold() { sudo paccache -ruk0; sudo paccache -rk3;}
        paccleanall() { sudo pacman -Scc ;}
        pacupdate() { sudo pacman -Syy ;}
        pacupgrade(){ sudo pacman -Syu ;}
        pacmirrors() { reflector --verbose --threads 4 --sort rate --save /etc/pacman.d/mirrorlist }
        pacinfo(){ 
            for arg in "$@"; do
                pacman -Qi $arg 2> /dev/null || pacman -Si $arg 2> /dev/null || yay -Si $arg;
            done;
        }
        pacdiff(){
            info=$(yay -Si "$@" | grep 'Depends' | sed 's/.*:.\{5\}\(.*\)/\1/')
            echo $info
            echo $info | xargs yay -Qi | grep 'was not found'
        }
        pacrank(){
            su -c "curl https://www.archlinux.org/mirrorlist/all/https/ | sed -E 's/^#Server/Server/' > /etc/pacman.d/mirrorlist.bkp"
            su -c "rankmirrors -n 7 /etc/pacman.d/mirrorlist.bkp > /etc/pacman.d/mirrorlist"
        }
    fi
fi
# }}}
# OSX-ONLY {{{
if [[ $OS == 'Darwin' ]]; then
    export vlc='/Applications/VLC.app/Contents/MacOS/VLC'
    alias top='top -stats pid,command,user,cpu,threads,mem,vsize,pageins,purg,state,time -o cpu -O mem -s 5 -n 20'
    alias quicksilver='. ~/Documents/QuicksilverIndexFix.sh'
    alias cellar='cd /usr/local/Cellar/'
    alias bcask='brew cask'
    # alias mvim='/Applications/MacVim.app/Contents/MacOS/MacVim'
    # alias vim='/Applications/MacVim.app/Contents/MacOS/Vim'
fi
# }}}
# vim: fdm=marker ft=zsh
