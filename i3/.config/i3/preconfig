# i3 config file (v4)
# UTILS {{{
# kill focused window
bindsym $super+q kill
# mbutton on titlebar kills
bindsym --release button2 kill
# reload the configuration file
bindsym $super+Shift+c reload
# restart i3 inplace
# bindsym $super+Shift+r restart;
bindsym $super+Shift+r exec i3-msg restart
# exit i3 (logs you out of your X session)
bindsym $super+Shift+x exec "i3-nagbar -t warning -m \
    'You pressed the exit shortcut. Do you really want to exit i3? \
    This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
# lock computer
bindsym $super+Shift+q exec $HOME/bin/i3lock.py
# }}}
# APPEARANCE {{{
set $bar_font_size 8
set $window_font_size 8
font pango:SF Pro Text $window_font_size
hide_edge_borders smart # none|smart|both
for_window [class="^.*"] border pixel 5
title_align center
#new {{{
# Set colors from Xresources
# Change 'color7' and 'color2' to whatever colors you want i3 to use
# from the generated scheme.
# NOTE: The '#f0f0f0' in the lines below is the color i3 will use if
# it fails to get colors from Xresources for some reason.
# set_from_resource $tx i3wm.color7 #ffffff
# set_from_resource $fg i3wm.color1 #ffffff
# set_from_resource $bg i3wm.color0 #ffffff

# class                 border  backgr  text indicator child_border
# client.focused          $fg     $fg     $tx  $bg       $fg
# client.focused_inactive $fg     $fg     $tx  $bg       $bg
# client.unfocused        $bg     $bg     $tx  $bg       $bg
# client.urgent           $bg     $bg     $tx  $bg       $bg
# client.placeholder      $bg     $bg     $tx  $bg       $bg

# client.background       $bg
# }}}
# old {{{
set $fg #4E9C00
set $bg #000000
set $tx #FFFFFF
set $un #333333
set $in #1B3600
set $ur #C20000

# COLORS                border  backgrd text    indicator
# set window colors
client.focused          $fg     $fg     $tx      $tx
client.focused_inactive $in     $in     $tx      $tx
client.unfocused        $un     $un     #888888  $tx
client.urgent           $ur     $ur     $tx      $tx
# }}}
# GAPS {{{
smart_gaps on
smart_borders on
gaps inner 5
gaps outer 0
# }}}
# }}}
# BARS {{{
    bar {
        id bar1
        font pango:SF Pro Text Medium $bar_font_size, Symbols Nerd Font $bar_font_size
        status_command py3status -c ~/.config/i3status/config
        mode dock
        position top
        tray_output none
        separator_symbol "ÔÅì"
        workspace_buttons yes
        # strip_workspace_numbers yes
        colors {
            background $bg
            statusline $tx
            separator  $un
                             # border  backgrd text
            focused_workspace  $fg     $fg     $tx
            active_workspace   $in     $in     $tx
            inactive_workspace $un     $un     $tx
            urgent_workspace   $bg     $bg     $tx
        }
    }
    bar {
        id bar2
        font pango:SF Pro Text Medium $bar_font_size, Symbols Nerd Font $bar_font_size
        colors {
            background $bg
            statusline $tx
            separator  $in
            binding_mode_indicator $fg $bg
        }
        mode hide
        hidden_state hide
        modifier $alt
        position top
        tray_output primary
        tray_padding 0
        workspace_buttons no
    }
# }}}
# WORKSPACES, ASSIGN, FOR_WINDOWS {{{
    set $w1 1:Waystone
    set $w2 2:Eolian
    set $w3 3:Fae
    set $w4 4:Ademre
    set $w5 5:University
    set $w6 6:SwordTree
    set $w7 7:SpinningLeaf
    set $w8 8:HeartOfStone
    set $w9 9:Chandrian
    set $w10 0:Lethani
    workspace "$w1" output VGA1
    workspace "$w2" output VGA1
    workspace "$w3" output VGA1
    workspace "$w4" output HDMI1
    # for_window <criteria> <command>
    for_window [class="Pavucontrol"] floating enable for_window [window_type="dialog"] floating enable
    for_window [window_type="splash"] floating enable
    for_window [window_type="utility"] floating enable
    for_window [class="mpv"] floating enable, sticky enable, $exec i3-msg $($HOME/bin/resolution.py -r 30 -p top right)
    for_window [title="www.netflix.com"] floating enable, sticky enable, $exec i3-msg $($HOME/bin/resolution.py -r 30 -p top right)
    for_window [title="calc"] floating enable, sticky enable, $exec i3-msg $($HOME/bin/resolution.py -r 30 -p top right)
    # marks
    for_window [title="weechat"] mark --add w
    for_window [class="Telegram"] mark --add t
    for_window [title="web.whatsapp"] mark --add z
    for_window [class="mpv"] mark --add p

    # ASSIGNMENTS windows to workspaces
    assign [class="Telegram"] $w1
# }}}
# BEHAVIOR {{{
    focus_follows_mouse no
    # dont focus other workspaces/displays when edge-left/right
    focus_wrapping no
    # Mouse+$super to drag floating windows
    floating_modifier $alt
    # If popup when fullscreen
    popup_during_fullscreen smart
    # $super+self go to prev workspace
    # workspace_auto_back_and_forth yes
    # delay windows hint focus uppon wkspc change
    force_display_urgency_hint 500 ms
    # Focus if the windows is in the cur wkspc
    focus_on_window_activation smart
# }}}
# BINDINGS {{{
    # Variables
    set $super    Mod4
    set $alt      Mod1
    set $control  Control
    set $swap     Mod4+$control
    set $exec     exec --no-startup-id
    set $always   exec_always --no-startup-id
    # Default applications
    set $filer    $HOME/bin/i3-nnn
    set $browser  qutebrowser
    set $terminal urxvt
    set $player   mpv
    # General bindings
    bindsym $super+Tab              workspace back_and_forth
    bindsym XF86AudioRaiseVolume    $exec pactl set-sink-volume 0 +5%
    bindsym XF86AudioLowerVolume    $exec pactl set-sink-volume 0 -5%
    bindsym XF86AudioMute           $exec pactl set-sink-mute 0 toggle
    bindsym XF86MonBrightnessUp     $exec light -A 20
    bindsym XF86MonBrightnessDown   $exec light -U 20
    # bindsym $super+i                $exec $HOME/bin/invert_colors.sh
    # bindsym $super+$control+i       $exec xrandr-invert-colors
    # bindsym $super+s        $exec $HOME/bin/say $(xclip -selection primary -o)
    # bindsym $super+Shift+s  $exec $HOME/bin/say $(xclip -selection clipboard -o)
    # free $super+keys
    # bindsym y, z, x, c, /, ', =, `
    # APP SHORTCUTS {{{
        bindsym $super+t        $exec $terminal
        bindsym $super+b        $exec $browser
        bindsym $super+Shift+b  $exec $HOME/bin/scratchpad.py -c qute_scratch -a "qutebrowser --basedir $HOME/Downloads/tmpdir --qt-arg name qute_scratch"
        bindsym $super+Shift+m  $exec $HOME/bin/scratchpad.py -c media_player -a "urxvt -name media_player -e ncmpcpp"
        bindsym $super+Shift+p  $exec $HOME/bin/scratchpad.py -c media_player -a "urxvt -name pandora -e tt start pandora"
        # note taking cli/gui
        # bindsym $super+Shift+n  $exec $HOME/bin/scratchpad.py -c joplin -a "urxvt -name joplin -e joplin"
                                # rms,lst,fem are the best voices
        bindsym $super+space    $exec rofi -show drun
        bindsym $super+o        $exec rofi -show window
        bindsym $super+g        $exec $terminal -e $filer
        bindsym $super+Shift+5  $exec "xdotool search --all --pid $(xdotool getwindowpid $(xdotool getactivewindow)) \
                                --name $(xdotool getwindowname $(xdotool getactivewindow)) set_window --name \
                                $(zenity --entry --text 'Name last focused window:')"
    # }}}
    # TREE {{{
        bindsym $super+u        focus parent
        bindsym $super+d        focus child
        bindsym $super+f        fullscreen  toggle
        bindsym $super+Shift+f  fullscreen  toggle global
        # Change container layout (stacked, tabbed, default)
        bindsym $super+w layout tabbed
        bindsym $super+e layout stacking
        bindsym $super+r layout toggle split
        # SetNext container as: split[h|v], stab, stack
        bindsym $super+bar      split h
        bindsym $super+minus    split v
        bindsym $super+v        split toggle
        bindsym $super+Shift+w  split t; layout tabbed
        bindsym $super+Shift+e  split t; layout stacking
        # Float | scratchpad
        bindsym $super+Shift+n          floating toggle
        bindsym $super+n                focus mode_toggle
        bindsym $super+bracketright     scratchpad show
        bindsym $super+bracketleft      move scratchpad
    # }}}
    # WORKSPACES {{{
        # switch to workspace
        bindsym $super+1 workspace $w1
        bindsym $super+2 workspace $w2
        bindsym $super+3 workspace $w3
        bindsym $super+4 workspace $w4
        bindsym $super+5 workspace $w5
        bindsym $super+6 workspace $w6
        bindsym $super+7 workspace $w7
        bindsym $super+8 workspace $w8
        bindsym $super+9 workspace $w9
        bindsym $super+0 workspace $w0
        # move focused container to workspace
        # bindsym $super+$control+1 move container to workspace $w1; workspace $w1
        # bindsym $super+$control+2 move container to workspace $w2; workspace $w2
        # bindsym $super+$control+3 move container to workspace $w3; workspace $w3
        # bindsym $super+$control+4 move container to workspace $w4; workspace $w4
        # bindsym $super+$control+5 move container to workspace 5; workspace 5
        # bindsym $super+$control+6 move container to workspace 6; workspace 6
        # bindsym $super+$control+7 move container to workspace 7; workspace 7
        # bindsym $super+$control+8 move container to workspace 8; workspace 8
        # bindsym $super+$control+9 move container to workspace 9; workspace 9
        # bindsym $super+$control+0 move container to workspace 10; workspace 10
        # move focused container to the directional output
        bindsym $super+Shift+h move container to output left
        bindsym $super+Shift+j move container to output down
        bindsym $super+Shift+k move container to output up
        bindsym $super+Shift+l move container to output right
        # move the whole workspace to the directional output
        bindsym $super+$control+h move workspace to output left
        bindsym $super+$control+j move workspace to output down
        bindsym $super+$control+k move workspace to output up
        bindsym $super+$control+l move workspace to output right
    # }}}
    # MOVEMENT {{{
        # change focus
        bindsym $super+h focus left
        bindsym $super+j focus down
        bindsym $super+k focus up
        bindsym $super+l focus right
        # move focused window
        bindsym $alt+h   move  left
        bindsym $alt+j   move  down
        bindsym $alt+k   move  up
        bindsym $alt+l   move  right
    # }}}
    # MODES {{{
        bindsym $super+p mode "$vi3m_p"
        bindsym $super+a mode "$vi3m_m"
        bindsym $super+i mode "$vi3m_u"
        bindsym $super+apostrophe mode "$vi3m_c"
        bindsym $super+m mode "$vi3m_z"
        bindsym $super+comma mode "Move: [hjkl|HJKL]"
        bindsym $super+period mode "Resize: [hjkl|HJKL]"
        # bindsym $super+p mode "PrintScreen:  [W]in  [F]ull  [S]el  [I]mgur"
        # bindsym $super+semicolon mode "Normal"
        # bindsym $alt+q mode "Quake"
        mode "Normal" {
            # Get back from inception
            bindsym $super+semicolon mode "default"
            bindsym BackSpace mode "default"
            bindsym Return mode "default"
            bindsym Escape mode "default"
            bindsym $control+c mode "default"
            # Actions
            bindsym r mode "Resize: [hjkl|HJKL]"
            bindsym m mode "Move: [hjkl|HJKL]"
            bindsym w mode "Walls:  [D]efault  [S]elect  [R]andom"
            bindsym p mode "PrintScreen:  [W]in  [F]ull  [S]el  [I]mgur"
            bindsym u mode "Music"
            bindsym k mode "Keyboard:  [e]n  [i]nt  [b]r"
            bindsym q mode "Quake"
        }
        # RESIZE {{{
        mode "Resize: [hjkl|HJKL]" {
            # Get back from inception
            bindsym $super+semicolon mode "default"
            bindsym BackSpace mode "default"
            bindsym Return mode "default"
            bindsym Escape mode "default"
            bindsym $control+c mode "default"
            bindsym q mode "default"
            bindsym m mode "Normal:Move: [hjkl|HJKL]"
            # Actions
            bindsym h       resize shrink width  10  px or 10  ppt
            bindsym k       resize grow   height 10  px or 10  ppt
            bindsym j       resize shrink height 10  px or 10  ppt
            bindsym l       resize grow   width  10  px or 10  ppt
            bindsym Shift+h resize shrink width  5 px or 5 ppt
            bindsym Shift+k resize shrink height 5 px or 5 ppt
            bindsym Shift+j resize grow   height 5 px or 5 ppt
            bindsym Shift+l resize grow   width  5 px or 5 ppt
        }
        # }}}
        # MOVE {{{
        mode "Move: [hjkl|HJKL]" {
            # Get back from inception
            bindsym $super+semicolon mode "default"
            bindsym BackSpace mode "default"
            bindsym Return mode "default"
            bindsym Escape mode "default"
            bindsym $control+c mode "default"
            bindsym q mode "default"
            bindsym r mode "Normal:Resize: [hjkl|HJKL]"
            # Actions
            bindsym h   move  left  50
            bindsym j   move  down  50
            bindsym k   move  up    50
            bindsym l   move  right 50
            bindsym Shift+h   move  left  15
            bindsym Shift+j   move  down  15
            bindsym Shift+k   move  up    15
            bindsym Shift+l   move  right 15
        }
        # }}}
        # WALLS {{{
            set $walls $HOME/Pictures/Wallpapers
            mode "Walls:  [D]efault  [S]elect  [R]andom" {
                # Get back from inception
                bindsym $super+semicolon mode "default"
                bindsym BackSpace mode "default"
                bindsym Return mode "default"
                bindsym Escape mode "default"
                bindsym $control+c mode "default"
                # Actions
                bindsym d $exec feh --bg-scale $walls/auri_and_kvothe.jpg; mode "default"
                bindsym r $exec feh --randomize --bg-scale $walls/; mode "default"
                bindsym s $exec nitrogen $walls; mode "default"
            }
        # }}}
        # SCREENSHOT {{{
            mode "PrintScreen:  [W]in  [F]ull  [S]el  [I]mgur" {
                # Get back from inception
                bindsym $super+semicolon mode "default"
                bindsym BackSpace mode "default"
                bindsym Return mode "default"
                bindsym Escape mode "default"
                bindsym $control+c mode "default"
                # Actions
                # [focus|full|selection] [clipboard|file]
                bindsym $super+w $exec $HOME/bin/shoot.sh -w; mode "default"
                bindsym $super+f $exec $HOME/bin/shoot.sh -f; mode "default"
                bindsym $super+s $exec $HOME/bin/shoot.sh -s; mode "default"
                bindsym w $exec $HOME/bin/shoot.sh -wc; mode "default"
                bindsym f $exec $HOME/bin/shoot.sh -fc; mode "default"
                bindsym s $exec $HOME/bin/shoot.sh -sc; mode "default"
                bindsym i $exec $HOME/bin/shoot.sh -i; mode "default"
            }
        # }}}
        # MUSIC {{{
            mode "Music" {
                # Get back from inception
                bindsym $super+semicolon mode "default"
                bindsym BackSpace mode "default"
                bindsym Return mode "default"
                bindsym Escape mode "default"
                bindsym $control+c mode "default"
                # Actions
            }
        # }}}
        # KEYBOARD {{{
            mode "Keyboard:  [e]n  [i]nt  [b]r" {
                # Get back from inception
                bindsym $super+semicolon mode "default"
                bindsym BackSpace mode "default"
                bindsym Return mode "default"
                bindsym Escape mode "default"
                bindsym $control+c mode "default"
                # Actions
                set $kb exec py3-cmd refresh keyboard_layout
                bindsym i $exec setxkbmap -layout us -variant intl; $kb; mode "default"
                bindsym e $exec setxkbmap -layout us; $kb; mode "default"
                bindsym b $exec setxkbmap -layout br; $kb; mode "default"
            }
    # }}}
        # QUAKE {{{
            mode "Quake" {
                # Get back from inception
                bindsym $super+semicolon mode "default"
                bindsym BackSpace mode "default"
                bindsym Return mode "default"
                bindsym Escape mode "default"
                bindsym $control+c mode "default"
                # Actions
                bindsym h $exec $HOME/bin/quake.py -n quake_left, mode "default"
                bindsym j $exec $HOME/bin/quake.py -n quake_bottom, mode "default"
                bindsym k $exec $HOME/bin/quake.py -n quake_top, mode "default"
                bindsym l $exec $HOME/bin/quake.py -n quake_right, mode "default"
            }
    # }}}
# }}}
# }}}
# AUTOSTART APPS {{{
    $exec $HOME/bin/i3-autostart.sh
# }}}
# vim: fdm=marker nowrap
